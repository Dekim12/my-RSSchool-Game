{"version":3,"sources":["js/components/Tasks/MathTask/MathTask.js","js/components/Tasks/CompareTask/CompareTask.js","js/components/Tasks/RusTranslatioTask/RusTranslatioTask.js","js/components/Tasks/EngTranslatioTask/EngTranslatioTask.js","js/components/Tasks/ComposeWordTask/ComposeWordTask.js","js/components/Tasks/AntonymsTask/AntonymsTask.js","js/components/Tasks/SynonymsTask/SynonymsTask.js","js/components/Tasks/SortingTask/SortingTask.js","js/components/Tasks/ComposePhraseTask/ComposePhraseTask.js","js/utils/constants.js","js/components/Tasks/ColorTask/ColorTask.js","js/utils/utils.js","js/utils/index.js","js/store/reducer.js","App.js","index.js","images/enemy lazy /^/.//.*/.svg$/ groupOptions: {} namespace object","js/pages/HomePage/HomePage.js","js/pages/EndPage/EndPage.js","js/pages/FightingPage/FightingPage.js","js/gameLogic/gameLogic.js","js/gameLogic/index.js","js/store/actions.js","js/components/Button/Button.js","js/components/UserNameInput/UserNameInput.js","js/components/Health/Health.js","js/components/RoundInfo/RoundInfo.js","js/components/TaskWindow/TaskWindow.js","js/components/PopUpWindow/PopUpWindow.js","js/components/Task/Task.js","js/components/Skills/Skills.js","js/components/Enemy/Enemy.js","js/components/EnemyPart/EnemyPart.js","js/components/index.js"],"names":["MAX_MIN_VALUES","forAddAndSubtr","forMult","firstNumMax","secondNumMax","forDivis","min","MathTask","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","generateNumbers","sign","firstNumber","secondNumber","getRandomNumber","getRightAnswer","a","b","addAnswer","event","preventDefault","value","Number","target","setState","objectSpread","state","currentAnswer","check","checkForEquality","rightAnswer","getResult","currentSign","length","_this$generateNumbers","_this$generateNumbers2","slicedToArray","_this$state","condition","concat","react_default","createElement","className","onSubmit","type","onChange","autoFocus","components","content","make–°hanges","Component","CompareTask","answer","toLowerCase","String","RusTranslatioTask","wordIndex","RUSSIAN_DICTIONARY","word","split","toUpperCase","join","ENGLISH_DICTIONARY","EngTranslatioTask","checkForConsistency","ComposeWordTask","onSort","sortedList","newWord","map","elem","children","generataLettersList","letters","classes","sort","Math","random","letterList","list","lib_default","items","moveTransitionDuration","dropBackTransitionDuration","AntonymsTask","activeElem","tagName","textContent","generateRandomArray","arrElem","currentNumber","ANTONYMS","indexOf","push","generateVersions","versions","antonym","arrElements","antonyms","onClick","SynonymsTask","SYNONYMS","sunonym","sunonyms","MIN_MAX_NUMBERS","SortingTask","values","generataNumdersList","numders","randomNumders","i","numbersList","answerAscending","slice","answerDescending","ascending","descending","definiteSorting","caption","currentSort","ComposePhraseTask","newPhrase","generataWordsList","words","phrase","ENGLISH_PHRASES","wordsList","ALL_TASKS","ColorTask","currentResult","colorName","colorInfo","COLORS","color","background","style","BACKGROUND_CLASS","FIRST_ENEMY_NAME","SECOND_ENEMY_NAME","THIRD_ENEMY_NAME","HEALTH","zero","initial","piece","OPTIONS","initialLevel","countEnemyPart","maxNameLength","TIME_DELAY","changeEnemy","enemyWins","heroWins","closeMistakeAlert","beforeAttack","enemyAttack","throwHeroAttack","swordHeroAttack","URLS","heroAttack","ENEMY_PARTS_NAME","max","floor","isNameCorrect","name","score","names","user","chooseFitingBackground","previousBg","currentBg","gemerateRandomName","sleep","ms","Promise","resolve","setTimeout","correctResult","__webpack_require__","d","__webpack_exports__","utils_chooseFitingBackground","utils_gemerateRandomName","initialState","currentPage","popUpIsVisible","responseReceived","enemyState","heroState","mistakeAlert","display","enemyIsDead","reducer","arguments","undefined","action","newStore","enemyHealth","userHealth","_home_sergey_study_game_myGame_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","payload","health","enemyName","currentTaskWindow","rndBackGround","pop","level","enemy","audioEffect","attackButtonIndex","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_js_gameLogic__WEBPACK_IMPORTED_MODULE_2__","connect","_ref","routGamePage","r","module","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","redux__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__","_js_store_reducer__WEBPACK_IMPORTED_MODULE_4__","_App__WEBPACK_IMPORTED_MODULE_5__","store","createStore","ReactDOM","render","document","getElementById","hot","accept","./body/body_1.svg","./body/body_2.svg","./body/body_3.svg","./handLeft/handLeft_1.svg","./handLeft/handLeft_2.svg","./handLeft/handLeft_3.svg","./handRight/handRight_1.svg","./handRight/handRight_2.svg","./handRight/handRight_3.svg","./head/head_1.svg","./head/head_2.svg","./head/head_3.svg","./legLeft/legLeft_1.svg","./legLeft/legLeft_2.svg","./legLeft/legLeft_3.svg","./legRight/legRight_1.svg","./legRight/legRight_2.svg","./legRight/legRight_3.svg","webpackAsyncContext","req","ids","e","then","id","t","Error","code","keys","exports","dispatch","bindActionCreators","prepareStore","goHome","index","key","FightingPage","defineCurentPopUp","currentPopUp","setEnemyName","setBackGround","popUp","heroActionClassName","togglePopUp","src","autoPlay","createNewLevel","getTaskComponent","namePage","HomePage","EndPage","getUserInfo","getEnemyParts","asyncToGenerator","regenerator_default","mark","_callee3","loadImage","loadImagesGroup","part","wrap","_context3","prev","next","_ref2","_callee","number","_context","abrupt","sent","stop","_x","_x2","apply","_ref3","_callee2","count","group","_context2","t0","t1","_x3","_x4","getEnemy","parts","makeEnemy","_ref4","_callee4","createEnemy","currentEnemy","enemyParts","_context4","_x5","_x6","gameLogic_routGamePage","gameLogic_getEnemy","gameLogic_getTaskComponent","startGame","endGame","addUser","goToTasksWindow","wrongAnswer","subtractHealth","enemyAction","heroAction","addAudioEffect","subtractAudioEffect","toggleAttackButton","throwMistakeAlert","killEnemy","_utils__WEBPACK_IMPORTED_MODULE_0__","randomName","flag","bg","isVisible","bool","Button","_ref$className","_ref$content","currentUserName","throwAndcloseAlert","toFight","replace","placeholder","components_Button_Button","Health","width","_getUserInfo","userDied","enemyDied","backGroung","components_Health_Health","currentWindow","attackIndex","enemyAttackHero","attackToEnemy","attackToHero","_ref5","_callee5","_context5","components_Skills_Skills","Task_Task","defineTaskWindow","PopUpWindow","components_TaskWindow_TaskWindow","TaskComponent","result","Enemy","nextProps","_this$props$enemy","head","body","handLeft","handRight","legLeft","legRight","components_EnemyPart_EnemyPart","partUrl","EnemyPart","_ref$partUrl","default","components_UserNameInput_UserNameInput","components_RoundInfo_RoundInfo","components_PopUpWindow_PopUpWindow","components_Enemy_Enemy"],"mappings":"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","file":"static/js/main.2dafa535.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from '../../../components';\nimport { getRandomNumber, checkForEquality } from '../../../utils';\n\nimport './MathTask.css';\n\nconst MAX_MIN_VALUES = {\n    forAddAndSubtr: 300,\n    forMult: {\n        firstNumMax: 50,\n        secondNumMax: 10\n    },\n    forDivis: {\n        firstNumMax: 300,\n        secondNumMax: 20\n    },\n    min: 1\n};\nclass MathTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { currentAnswer: '' };\n        this.sign = ['+', '-', '*', '/'];\n    }\n\n    generateNumbers = sign => {\n        let firstNumber;\n        let secondNumber;\n\n        if (sign === '+' || sign === '-') {\n            firstNumber = getRandomNumber(\n                MAX_MIN_VALUES.min,\n                MAX_MIN_VALUES.forAddAndSubtr\n            );\n            secondNumber = getRandomNumber(\n                MAX_MIN_VALUES.min,\n                MAX_MIN_VALUES.forAddAndSubtr\n            );\n            return [firstNumber, secondNumber];\n        } else if (sign === '*') {\n            firstNumber = getRandomNumber(\n                MAX_MIN_VALUES.min,\n                MAX_MIN_VALUES.forMult.firstNumMax\n            );\n            secondNumber = getRandomNumber(\n                MAX_MIN_VALUES.min,\n                MAX_MIN_VALUES.forMult.secondNumMax\n            );\n            return [firstNumber, secondNumber];\n        } else {\n            firstNumber = getRandomNumber(\n                MAX_MIN_VALUES.min,\n                MAX_MIN_VALUES.forDivis.firstNumMax\n            );\n            secondNumber = getRandomNumber(\n                MAX_MIN_VALUES.min,\n                MAX_MIN_VALUES.forDivis.secondNumMax\n            );\n            while (firstNumber % secondNumber) {\n                secondNumber = getRandomNumber(\n                    MAX_MIN_VALUES.min,\n                    MAX_MIN_VALUES.forDivis.secondNumMax\n                );\n            }\n            return [firstNumber, secondNumber];\n        }\n    };\n\n    getRightAnswer = (a, b, sign) => {\n        switch (sign) {\n            case '+': {\n                return a + b;\n            }\n            case '-': {\n                return a - b;\n            }\n            case '*': {\n                return a * b;\n            }\n            case '/': {\n                return a / b;\n            }\n            default: {\n                return;\n            }\n        }\n    };\n\n    addAnswer = event => {\n        event.preventDefault();\n        const value = Number(event.target.value);\n        this.setState({ ...this.state, currentAnswer: value });\n    };\n\n    check = event => {\n        event.preventDefault();\n        checkForEquality(\n            this.state.rightAnswer,\n            this.state.currentAnswer,\n            this.props.getResult\n        );\n    };\n\n    componentWillMount() {\n        const currentSign = this.sign[getRandomNumber(0, this.sign.length)];\n        const [firstNumber, secondNumber] = this.generateNumbers(currentSign);\n        const rightAnswer = this.getRightAnswer(\n            firstNumber,\n            secondNumber,\n            currentSign\n        );\n        this.setState({\n            ...this.state,\n            ...{ rightAnswer, firstNumber, secondNumber, currentSign }\n        });\n    }\n\n    render() {\n        const { firstNumber, secondNumber, currentSign } = this.state;\n        const condition = `${firstNumber} ${currentSign} ${secondNumber} = ?`;\n\n        return (\n            <div className=\"task math-task\">\n                <h4>Solve an example:</h4>\n                <p>{condition}</p>\n                <form onSubmit={this.check}>\n                    <input\n                        type=\"text\"\n                        onChange={this.addAnswer}\n                        autoFocus=\"autofocus\"\n                        className=\"task-input\"\n                    />\n                </form>\n                <Button\n                    content=\"Reply\"\n                    className=\"hendler-game-button\"\n                    make–°hanges={this.check}\n                />\n            </div>\n        );\n    }\n}\n\nexport default MathTask;\n","import React, { Component } from 'react';\nimport { Button } from '../../../components';\nimport { checkForEquality, getRandomNumber } from '../../../utils';\n\nimport './CompareTask.css';\n\nconst MAX_MIN_VALUES = {\n    max: 500,\n    min: -200\n};\n\nclass CompareTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { currentAnswer: '' };\n        this.sign = ['<', '>'];\n    }\n\n    getRightAnswer = (a, b, sign) => {\n        switch (sign) {\n            case '>': {\n                if (a > b) {\n                    return true;\n                }\n                return false;\n            }\n            case '<': {\n                if (a < b) {\n                    return true;\n                }\n                return false;\n            }\n            default: {\n                return;\n            }\n        }\n    };\n\n    addAnswer = event => {\n        event.preventDefault();\n        const value = event.target.value;\n        this.setState({ ...this.state, currentAnswer: value });\n    };\n\n    check = event => {\n        event.preventDefault();\n        const answer = this.state.currentAnswer.toLowerCase();\n        checkForEquality(this.state.rightAnswer, answer, this.props.getResult);\n    };\n\n    componentWillMount() {\n        const currentSign = this.sign[getRandomNumber(0, this.sign.length)];\n        const firstNumber = getRandomNumber(\n            MAX_MIN_VALUES.min,\n            MAX_MIN_VALUES.max\n        );\n        const secondNumber = getRandomNumber(\n            MAX_MIN_VALUES.min,\n            MAX_MIN_VALUES.max\n        );\n        const rightAnswer = String(\n            this.getRightAnswer(firstNumber, secondNumber, currentSign)\n        );\n        this.setState({\n            ...this.state,\n            ...{ rightAnswer, firstNumber, secondNumber, currentSign }\n        });\n    }\n\n    render() {\n        const { firstNumber, secondNumber, currentSign } = this.state;\n        const condition = `${firstNumber} ${currentSign} ${secondNumber}`;\n\n        return (\n            <div className=\"task compare-task\">\n                <h4>True or False?</h4>\n                <p>{condition}</p>\n                <form onSubmit={this.check}>\n                    <input\n                        type=\"text\"\n                        onChange={this.addAnswer}\n                        autoFocus=\"autofocus\"\n                        className=\"task-input\"\n                    />\n                </form>\n                <Button\n                    content=\"Reply\"\n                    className=\"hendler-game-button\"\n                    make–°hanges={this.check}\n                />\n            </div>\n        );\n    }\n}\n\nexport default CompareTask;\n","import React, { Component } from 'react';\nimport { Button } from '../../../components';\nimport {\n    getRandomNumber,\n    checkForEquality,\n    RUSSIAN_DICTIONARY,\n    ENGLISH_DICTIONARY\n} from '../../../utils';\n\nimport './RusTranslatioTask.css';\n\nclass RusTranslatioTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { currentAnswer: '' };\n    }\n\n    addAnswer = event => {\n        event.preventDefault();\n        const value = event.target.value;\n        this.setState({ ...this.state, currentAnswer: value });\n    };\n\n    check = event => {\n        event.preventDefault();\n        const answer = this.state.currentAnswer.toLowerCase();\n        checkForEquality(this.state.rightAnswer, answer, this.props.getResult);\n    };\n\n    componentWillMount() {\n        const wordIndex = getRandomNumber(0, RUSSIAN_DICTIONARY.length);\n        let word = RUSSIAN_DICTIONARY[wordIndex][0].split('');\n        word[0] = word[0].toUpperCase();\n        word = word.join('');\n        const rightAnswer = ENGLISH_DICTIONARY[wordIndex].toLowerCase();\n        this.setState({\n            ...this.state,\n            ...{ rightAnswer, word }\n        });\n    }\n\n    render() {\n        const { word } = this.state;\n\n        return (\n            <div className=\"task rus-translatio-task\">\n                <h4>Write the correct translation:</h4>\n                <p>{word}</p>\n                <form onSubmit={this.check}>\n                    <input\n                        type=\"text\"\n                        onChange={this.addAnswer}\n                        autoFocus=\"autofocus\"\n                        className=\"task-input\"\n                    />\n                </form>\n                <Button\n                    content=\"Reply\"\n                    className=\"hendler-game-button\"\n                    make–°hanges={this.check}\n                />\n            </div>\n        );\n    }\n}\n\nexport default RusTranslatioTask;\n","import React, { Component } from 'react';\nimport { Button } from '../../../components';\nimport {\n    getRandomNumber,\n    checkForConsistency,\n    RUSSIAN_DICTIONARY,\n    ENGLISH_DICTIONARY\n} from '../../../utils';\n\nimport './EngTranslatioTask.css';\n\nclass EngTranslatioTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { currentAnswer: '' };\n    }\n\n    addAnswer = event => {\n        event.preventDefault();\n        const value = event.target.value;\n        this.setState({ ...this.state, currentAnswer: value });\n    };\n\n    check = event => {\n        event.preventDefault();\n        const answer = this.state.currentAnswer.toLowerCase();\n        checkForConsistency(\n            this.state.rightAnswer,\n            answer,\n            this.props.getResult\n        );\n    };\n\n    componentWillMount() {\n        const wordIndex = getRandomNumber(0, ENGLISH_DICTIONARY.length);\n        const word = ENGLISH_DICTIONARY[wordIndex];\n        const rightAnswer = RUSSIAN_DICTIONARY[wordIndex];\n        this.setState({\n            ...this.state,\n            ...{ rightAnswer, word }\n        });\n    }\n\n    render() {\n        const { word } = this.state;\n\n        return (\n            <div className=\"task eng-translatio-task\">\n                <h4>Write the correct translation:</h4>\n                <p>{word}</p>\n                <form onSubmit={this.check}>\n                    <input\n                        type=\"text\"\n                        onChange={this.addAnswer}\n                        autoFocus=\"autofocus\"\n                        className=\"task-input\"\n                    />\n                </form>\n                <Button\n                    content=\"Reply\"\n                    className=\"hendler-game-button\"\n                    make–°hanges={this.check}\n                />\n            </div>\n        );\n    }\n}\n\nexport default EngTranslatioTask;\n","import React, { Component } from 'react';\nimport { Button } from '../../../components';\nimport {\n    getRandomNumber,\n    checkForEquality,\n    ENGLISH_DICTIONARY\n} from '../../../utils';\nimport DragSortableList from 'react-drag-sortable';\n\nimport './ComposeWordTask.css';\n\nclass ComposeWordTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        this.currentAnswer = '';\n    }\n\n    onSort = sortedList => {\n        const newWord = sortedList.map(elem => elem.content.props.children);\n        this.currentAnswer = newWord.join('');\n    };\n\n    check = event => {\n        event.preventDefault();\n        checkForEquality(\n            this.state.rightAnswer,\n            this.currentAnswer,\n            this.props.getResult\n        );\n    };\n\n    generataLettersList = letters =>\n        letters.map(elem => ({\n            content: <div>{elem}</div>,\n            classes: ['letter']\n        }));\n\n    componentWillMount() {\n        let word =\n            ENGLISH_DICTIONARY[getRandomNumber(0, ENGLISH_DICTIONARY.length)];\n        word = word.toLowerCase();\n        const rightAnswer = word;\n        word = word.split('').sort((a, b) => Math.random() - 0.5);\n        this.currentAnswer = word.join('');\n        const letterList = this.generataLettersList(word);\n        this.setState({\n            ...this.state,\n            ...{ rightAnswer, letterList }\n        });\n    }\n\n    render() {\n        const list = this.state.letterList;\n\n        return (\n            <div className=\"task compose-task\">\n                <h4>Compose the word:</h4>\n                <DragSortableList\n                    items={list}\n                    moveTransitionDuration={0.3}\n                    dropBackTransitionDuration={0.3}\n                    onSort={this.onSort}\n                    type=\"horizontal\"\n                />\n                <Button\n                    content=\"Reply\"\n                    className=\"hendler-game-button\"\n                    make–°hanges={this.check}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ComposeWordTask;\n","import React, { Component } from 'react';\nimport { Button } from '../../../components';\nimport { getRandomNumber, checkForEquality, ANTONYMS } from '../../../utils';\n\nimport './AntonymsTask.css';\n\nclass AntonymsTask extends Component {\n    constructor(props) {\n        super(props);\n        this.antonym = '';\n        this.rightAnswer = '';\n        this.versions = '';\n    }\n\n    check = event => {\n        const activeElem = event.target;\n        if (activeElem.tagName === 'BUTTON') {\n            checkForEquality(\n                this.rightAnswer,\n                activeElem.textContent,\n                this.props.getResult\n            );\n        }\n    };\n\n    generateRandomArray = () => {\n        const arrElem = [];\n        while (arrElem.length < 4) {\n            let currentNumber = getRandomNumber(0, ANTONYMS.length);\n            if (arrElem.indexOf(currentNumber) === -1) {\n                arrElem.push(currentNumber);\n            }\n        }\n        return arrElem;\n    };\n\n    generateVersions = arrElem => {\n        const versions = arrElem.map(elem => ANTONYMS[elem][1]);\n        this.versions = versions.sort((a, b) => Math.random() - 0.5);\n    };\n\n    componentWillMount() {\n        const arrElements = this.generateRandomArray();\n        const antonyms = ANTONYMS[arrElements[0]];\n        this.generateVersions(arrElements);\n        this.antonym = antonyms[0];\n        this.rightAnswer = antonyms[1];\n    }\n\n    render() {\n        const condition = `${this.antonym} - ... ?`;\n\n        return (\n            <div className=\"task antonyms-task\">\n                <h4>Find antonym:</h4>\n                <p>{condition}</p>\n                <div className=\"antonyms-wrapper\" onClick={this.check}>\n                    <Button\n                        content={this.versions[0]}\n                        className=\"antonyms-sunonyms-button\"\n                    />\n                    <Button\n                        content={this.versions[1]}\n                        className=\"antonyms-sunonyms-button\"\n                    />\n                    <Button\n                        content={this.versions[2]}\n                        className=\"antonyms-sunonyms-button\"\n                    />\n                    <Button\n                        content={this.versions[3]}\n                        className=\"antonyms-sunonyms-button\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AntonymsTask;\n","import React, { Component } from 'react';\nimport { Button } from '../../../components';\nimport { getRandomNumber, checkForEquality, SYNONYMS } from '../../../utils';\n\nimport './SynonymsTask.css';\n\nclass SynonymsTask extends Component {\n    constructor(props) {\n        super(props);\n        this.sunonym = '';\n        this.rightAnswer = '';\n        this.versions = '';\n    }\n\n    check = event => {\n        const activeElem = event.target;\n        if (activeElem.tagName === 'BUTTON') {\n            checkForEquality(\n                this.rightAnswer,\n                activeElem.textContent,\n                this.props.getResult\n            );\n        }\n    };\n\n    generateRandomArray = () => {\n        const arrElem = [];\n        while (arrElem.length < 4) {\n            let currentNumber = getRandomNumber(0, SYNONYMS.length);\n            if (arrElem.indexOf(currentNumber) === -1) {\n                arrElem.push(currentNumber);\n            }\n        }\n        return arrElem;\n    };\n\n    generateVersions = arrElem => {\n        const versions = arrElem.map(elem => SYNONYMS[elem][1]);\n        this.versions = versions.sort((a, b) => Math.random() - 0.5);\n    };\n\n    componentWillMount() {\n        const arrElements = this.generateRandomArray();\n        const sunonyms = SYNONYMS[arrElements[0]];\n        this.generateVersions(arrElements);\n        this.sunonym = sunonyms[0];\n        this.rightAnswer = sunonyms[1];\n    }\n\n    render() {\n        const condition = `${this.sunonym} - ... ?`;\n\n        return (\n            <div className=\"task sunonyms-task\">\n                <h4>Find sunonym:</h4>\n                <p>{condition}</p>\n                <div className=\"sunonyms-wrapper\" onClick={this.check}>\n                    <Button\n                        content={this.versions[0]}\n                        className=\"antonyms-sunonyms-button\"\n                    />\n                    <Button\n                        content={this.versions[1]}\n                        className=\"antonyms-sunonyms-button\"\n                    />\n                    <Button\n                        content={this.versions[2]}\n                        className=\"antonyms-sunonyms-button\"\n                    />\n                    <Button\n                        content={this.versions[3]}\n                        className=\"antonyms-sunonyms-button\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SynonymsTask;\n","import React, { Component } from 'react';\nimport { Button } from '../../../components';\nimport { getRandomNumber, checkForEquality } from '../../../utils';\nimport DragSortableList from 'react-drag-sortable';\n\nimport './SortingTask.css';\n\nconst MIN_MAX_NUMBERS = {\n    min: 10,\n    max: 999\n};\n\nclass SortingTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        this.currentAnswer = '';\n        this.rightAnswer = '';\n    }\n\n    onSort = sortedList => {\n        const values = sortedList.map(elem => elem.content.props.children);\n        this.currentAnswer = values.join('.');\n    };\n\n    check = event => {\n        event.preventDefault();\n        checkForEquality(\n            this.rightAnswer,\n            this.currentAnswer,\n            this.props.getResult\n        );\n    };\n\n    generataNumdersList = numders =>\n        numders.map(elem => ({\n            content: <div>{elem}</div>,\n            classes: ['sort-numbers']\n        }));\n\n    componentWillMount() {\n        const randomNumders = [];\n        for (let i = 0; i < 5; i++) {\n            randomNumders.push(\n                getRandomNumber(MIN_MAX_NUMBERS.min, MIN_MAX_NUMBERS.max)\n            );\n        }\n        const numbersList = this.generataNumdersList(randomNumders);\n        const answerAscending = randomNumders\n            .slice()\n            .sort((a, b) => a - b)\n            .join('.');\n        const answerDescending = randomNumders\n            .slice()\n            .sort((a, b) => b - a)\n            .join('.');\n        this.setState({\n            ...this.state,\n            ...{\n                numbersList,\n                ascending: [answerAscending, 'Sort numbers ascending:'],\n                descending: [answerDescending, 'Sort numbers descending:']\n            }\n        });\n    }\n\n    render() {\n        const definiteSorting = getRandomNumber(0, 2);\n        const numbersList = this.state.numbersList;\n        let caption = '';\n        if (definiteSorting) {\n            const currentSort = this.state.ascending;\n            caption = currentSort[1];\n            this.rightAnswer = currentSort[0];\n        } else {\n            const currentSort = this.state.descending;\n            caption = currentSort[1];\n            this.rightAnswer = currentSort[0];\n        }\n\n        return (\n            <div className=\"task sort-task\">\n                <h4>{caption}</h4>\n                <DragSortableList\n                    items={numbersList}\n                    moveTransitionDuration={0.3}\n                    dropBackTransitionDuration={0.3}\n                    onSort={this.onSort}\n                    type=\"horizontal\"\n                />\n                <Button\n                    content=\"Reply\"\n                    className=\"hendler-game-button\"\n                    make–°hanges={this.check}\n                />\n            </div>\n        );\n    }\n}\n\nexport default SortingTask;\n","import React, { Component } from 'react';\nimport { Button } from '../../../components';\nimport {\n    getRandomNumber,\n    checkForEquality,\n    ENGLISH_PHRASES\n} from '../../../utils';\nimport DragSortableList from 'react-drag-sortable';\n\nimport './ComposePhraseTask.css';\n\nclass ComposePhraseTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        this.currentAnswer = '';\n    }\n\n    onSort = sortedList => {\n        const newPhrase = sortedList.map(elem => elem.content.props.children);\n        this.currentAnswer = newPhrase.join(' ');\n    };\n\n    check = event => {\n        event.preventDefault();\n        checkForEquality(\n            this.state.rightAnswer,\n            this.currentAnswer,\n            this.props.getResult\n        );\n    };\n\n    generataWordsList = words =>\n        words.map(elem => ({\n            content: <div>{elem}</div>,\n            classes: ['words']\n        }));\n\n    componentWillMount() {\n        let phrase =\n            ENGLISH_PHRASES[getRandomNumber(0, ENGLISH_PHRASES.length)];\n        const rightAnswer = phrase;\n        phrase = phrase.split(' ').sort((a, b) => Math.random() - 0.5);\n        this.currentAnswer = phrase.join(' ');\n        const wordsList = this.generataWordsList(phrase);\n        this.setState({\n            ...this.state,\n            ...{ rightAnswer, wordsList }\n        });\n    }\n\n    render() {\n        const list = this.state.wordsList;\n\n        return (\n            <div className=\"task compose-phrase-task\">\n                <h4>Compose the phrase:</h4>\n                <DragSortableList\n                    items={list}\n                    moveTransitionDuration={0.3}\n                    dropBackTransitionDuration={0.3}\n                    onSort={this.onSort}\n                    type=\"horizontal\"\n                />\n                <Button\n                    content=\"Reply\"\n                    className=\"hendler-game-button\"\n                    make–°hanges={this.check}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ComposePhraseTask;\n","import {\n    MathTask,\n    CompareTask,\n    EngTranslatioTask,\n    ComposeWordTask,\n    AntonymsTask,\n    RusTranslatioTask,\n    SortingTask,\n    SynonymsTask,\n    ComposePhraseTask,\n    ColorTask\n} from '../components/Tasks';\n\nconst ALL_TASKS = [\n    MathTask,\n    CompareTask,\n    EngTranslatioTask,\n    ComposeWordTask,\n    AntonymsTask,\n    RusTranslatioTask,\n    SortingTask,\n    SynonymsTask,\n    ComposePhraseTask,\n    ColorTask\n];\n\nconst ANTONYMS = [\n    ['active', 'passive'],\n    ['small', 'big'],\n    ['busy', 'free'],\n    ['clean', 'dirty'],\n    ['hot', 'cold'],\n    ['dry', 'wet'],\n    ['future', 'past'],\n    ['evil', 'good'],\n    ['top', 'bottom'],\n    ['light', 'darkness'],\n    ['lie', 'truth'],\n    ['friend', 'enemy'],\n    ['peace', 'war'],\n    ['hell', 'paradise'],\n    ['fast', 'slow'],\n    ['right', 'left'],\n    ['true', 'false']\n];\n\nconst SYNONYMS = [\n    ['amazing', 'incredible'],\n    ['answer', 'response'],\n    ['strong', 'powerful'],\n    ['easy', 'simple'],\n    ['boring', 'dull'],\n    ['awful', 'horrible'],\n    ['smart', 'wise'],\n    ['beautiful', 'pretty'],\n    ['brave', 'courageous'],\n    ['begin', 'start'],\n    ['shining', 'brilliant'],\n    ['cry', 'shout'],\n    ['famous', 'celebrated'],\n    ['fast', 'speedy'],\n    ['important', 'necessary'],\n    ['right', 'correct']\n];\n\nconst ENGLISH_DICTIONARY = [\n    'plane',\n    'Bird',\n    'Book',\n    'Car',\n    'Dog',\n    'Cat',\n    'Fish',\n    'Horse',\n    'Money',\n    'Pen',\n    'Tree',\n    'Sun',\n    'Mountain',\n    'Watch',\n    'Fox',\n    'Monkey',\n    'Elephant',\n    'Flower',\n    'Chair',\n    'Apple'\n];\n\nconst RUSSIAN_DICTIONARY = [\n    ['—Å–∞–º–æ–ª–µ—Ç', '—Å–∞–º–æ–ª–µ—Ç–∏–∫'],\n    ['–ø—Ç–∏—Ü–∞', '–ø—Ç–∏—á–∫–∞'],\n    ['–∫–Ω–∏–≥–∞', '–∫–Ω–∏–∂–∫–∞', '–∫–Ω–∏–∂–µ—á–∫–∞'],\n    ['–º–∞—à–∏–Ω–∞', '–º–∞—à–∏–Ω–∫–∞'],\n    ['—Å–æ–±–∞–∫–∞', '—Å–æ–±–∞—á–∫–∞', '—â–µ–Ω–æ–∫'],\n    ['–∫–æ—Ç', '–∫–æ—Ç–∏–∫', '–∫–æ—Ç–µ–Ω–æ–∫', '–∫–æ—à–∫–∞'],\n    ['—Ä—ã–±–∞', '—Ä—ã–±–∫–∞'],\n    ['–ª–æ—à–∞–¥—å', '–ª–æ—à–∞–¥–∫–∞'],\n    ['–¥–µ–Ω—å–≥–∏', '–¥–µ–Ω–µ–∂–∫–∏'],\n    ['—Ä—É—á–∫–∞'],\n    ['–¥–µ—Ä–µ–≤–æ', '–¥–µ—Ä–µ–≤—Ü–µ'],\n    ['—Å–æ–ª–Ω—Ü–µ', '—Å–æ–ª–Ω—ã—à–∫–æ'],\n    ['–≥–æ—Ä–∞'],\n    ['—á–∞—Å—ã', '—á–∞—Å–∏–∫–∏'],\n    ['–ª–∏—Å–∞', '–ª–∏—Å–∏—á–∫–∞'],\n    ['–æ–±–µ–∑—å—è–Ω–∞', '–æ–±–µ–∑—å—è–Ω–∫–∞'],\n    ['—Å–ª–æ–Ω', '—Å–ª–æ–Ω–∏–∫'],\n    ['—Ü–≤–µ—Ç–æ–∫', '—Ü–≤–µ—Ç–æ—á–µ–∫'],\n    ['—Å—Ç—É–ª', '—Å—Ç—É–ª–∏–∫'],\n    ['—è–±–ª–æ–∫–æ', '—è–±–ª–æ—á–∫–æ']\n];\n\nconst COLORS = [\n    ['#ff0000', 'red'],\n    ['#000000', 'black'],\n    ['#ffffff', 'white'],\n    ['#ee82ee', 'violet'],\n    ['#008000', 'green'],\n    ['#ffff00', 'yellow'],\n    ['#0000ff', 'blue'],\n    ['#ffc0cb', 'pink'],\n    ['#808080', 'gray'],\n    ['#633a0b', 'brown']\n];\n\nconst BACKGROUND_CLASS = [\n    'fighting-page first-background',\n    'fighting-page second-background',\n    'fighting-page third-background',\n    'fighting-page fourth-background',\n    'fighting-page fifth-background'\n];\n\nconst FIRST_ENEMY_NAME = [\n    '–°—Ç—Ä–∞—à–Ω—ã–π',\n    '–ó–ª–æ–±–Ω—ã–π',\n    '–£–∂–∞—Å–Ω—ã–π',\n    '–¢–æ—â–∏–π',\n    '–ì–ª—É–ø—ã–π',\n    '–î–µ—Ä–∑–∫–∏–π',\n    '–°–≤–∏—Ä–µ–ø—ã–π'\n];\n\nconst SECOND_ENEMY_NAME = [\n    '–û–≥—Ä',\n    '–ì–Ω–æ–º',\n    '–û—Ä–∫',\n    '–ì–æ–±–ª–∏–Ω',\n    '–î–µ–º–æ–Ω',\n    '–ì–æ–ª–µ–º',\n    '–≠–ª—å—Ñ'\n];\n\nconst THIRD_ENEMY_NAME = [\n    '–°–∞–Ω—è',\n    '–î–∏–º–æ–Ω',\n    '–ö–æ–ª—è–Ω',\n    '–°–µ—Ä–µ–≥–∞',\n    '–ú–∞–∫—Å',\n    '–ú–∏—Ö–∞–∏–ª',\n    '–ñ–µ–∫–∞'\n];\n\nconst ENGLISH_PHRASES = [\n    'Kate likes dogs',\n    'There is my house',\n    'My name is Paul',\n    'I don‚Äôt like honey',\n    'I like this book.',\n    'My sister is sleeping',\n    'We live in the city centre',\n    'She likes playing chess',\n    'My father is a doctor',\n    'The weather is perfect',\n    'You have come very fast',\n    'There is a book on the table',\n    'The sun rises in the east',\n    'Alice is my friend',\n    'I am not ready yet',\n    'The sun was rising in the sky'\n];\n\nconst HEALTH = {\n    zero: 0,\n    initial: 100,\n    piece: 20\n};\n\nconst OPTIONS = {\n    initialLevel: 0,\n    countEnemyPart: 3,\n    maxNameLength: 15\n};\n\nconst TIME_DELAY = {\n    changeEnemy: 2500,\n    enemyWins: [2100, 2700],\n    heroWins: [1100, 2400, 200],\n    closeMistakeAlert: 2000,\n    beforeAttack: 1000,\n    enemyAttack: [1000, 300, 100, 200, 1800],\n    throwHeroAttack: [1000, 450, 950, 100, 500],\n    swordHeroAttack: [1000, 1100, 800, 200, 400]\n};\n\nconst URLS = {\n    enemyWins: './audio/enemyWins.mp3',\n    heroWins: './audio/heroWins.mp3',\n    heroAttack: './audio/heroAttack.mp3',\n    enemyAttack: './audio/enemyAttack.mp3'\n};\n\nconst ENEMY_PARTS_NAME = [\n    'head',\n    'body',\n    'handLeft',\n    'handRight',\n    'legLeft',\n    'legRight'\n];\n\nexport {\n    ENGLISH_DICTIONARY,\n    RUSSIAN_DICTIONARY,\n    BACKGROUND_CLASS,\n    THIRD_ENEMY_NAME,\n    SECOND_ENEMY_NAME,\n    FIRST_ENEMY_NAME,\n    ANTONYMS,\n    SYNONYMS,\n    ENGLISH_PHRASES,\n    HEALTH,\n    TIME_DELAY,\n    URLS,\n    OPTIONS,\n    ENEMY_PARTS_NAME,\n    ALL_TASKS,\n    COLORS\n};\n","import React, { Component } from 'react';\nimport { Button } from '../../../components';\nimport { getRandomNumber, checkForEquality, COLORS } from '../../../utils';\n\nimport './ColorTask.css';\n\nclass ColorTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { currentAnswer: '' };\n    }\n\n    addAnswer = event => {\n        event.preventDefault();\n        const value = event.target.value;\n        this.setState({ ...this.state, currentAnswer: value });\n    };\n\n    check = event => {\n        event.preventDefault();\n        const currentResult = this.state.currentAnswer.toLowerCase();\n        checkForEquality(\n            this.state.colorName,\n            currentResult,\n            this.props.getResult\n        );\n    };\n\n    componentWillMount() {\n        const colorInfo = COLORS[getRandomNumber(0, COLORS.length)];\n        const colorName = colorInfo[1];\n        const color = { background: colorInfo[0] };\n        this.setState({\n            ...this.state,\n            ...{ colorName, color }\n        });\n    }\n\n    render() {\n        const { color } = this.state;\n\n        return (\n            <div className=\"task color-task\">\n                <h4>what is color?</h4>\n                <div className=\"color-piece\" style={color} />\n                <form onSubmit={this.check}>\n                    <input\n                        type=\"text\"\n                        onChange={this.addAnswer}\n                        autoFocus=\"autofocus\"\n                        className=\"task-input\"\n                    />\n                </form>\n                <Button\n                    content=\"Reply\"\n                    className=\"hendler-game-button\"\n                    make–°hanges={this.check}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ColorTask;\n","import {\n    BACKGROUND_CLASS,\n    THIRD_ENEMY_NAME,\n    SECOND_ENEMY_NAME,\n    FIRST_ENEMY_NAME\n} from './constants';\n\nconst getRandomNumber = (min, max) =>\n    Math.floor(Math.random() * (max - min) + min);\n\nconst isNameCorrect = (name, score) => {\n    const names = score.map(user => user.name);\n    if (!name || names.indexOf(name) > -1) {\n        return false;\n    }\n    return true;\n};\n\nconst chooseFitingBackground = previousBg => {\n    let currentBg =\n        BACKGROUND_CLASS[getRandomNumber(0, BACKGROUND_CLASS.length)];\n    while (previousBg === currentBg) {\n        currentBg =\n            BACKGROUND_CLASS[getRandomNumber(0, BACKGROUND_CLASS.length)];\n    }\n    return currentBg;\n};\n\nconst gemerateRandomName = () => {\n    let name = '';\n    name += FIRST_ENEMY_NAME[getRandomNumber(0, FIRST_ENEMY_NAME.length)] + ' ';\n    name +=\n        SECOND_ENEMY_NAME[getRandomNumber(0, FIRST_ENEMY_NAME.length)] + ' ';\n    name += THIRD_ENEMY_NAME[getRandomNumber(0, FIRST_ENEMY_NAME.length)];\n    return name;\n};\n\nconst sleep = ms => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n};\n\nconst checkForEquality = (correctResult, currentResult, getResult) => {\n    if (correctResult === currentResult) {\n        getResult(true);\n    } else {\n        getResult(false);\n    }\n};\n\nconst checkForConsistency = (correctResult, currentResult, getResult) => {\n    if (correctResult.indexOf(currentResult) >= 0) {\n        getResult(true);\n    } else {\n        getResult(false);\n    }\n};\n\nexport {\n    getRandomNumber,\n    isNameCorrect,\n    chooseFitingBackground,\n    gemerateRandomName,\n    sleep,\n    checkForEquality,\n    checkForConsistency\n};\n","export {\n    getRandomNumber,\n    isNameCorrect,\n    chooseFitingBackground,\n    gemerateRandomName,\n    sleep,\n    checkForEquality,\n    checkForConsistency\n} from './utils';\n\nexport {\n    ENGLISH_DICTIONARY,\n    RUSSIAN_DICTIONARY,\n    ANTONYMS,\n    SYNONYMS,\n    ENGLISH_PHRASES,\n    HEALTH,\n    TIME_DELAY,\n    URLS,\n    OPTIONS,\n    ENEMY_PARTS_NAME,\n    ALL_TASKS,\n    COLORS\n} from './constants';\n","import { HEALTH } from '../utils';\n\nconst initialState = {\n    currentPage: 'homePage',\n    score: [],\n    popUpIsVisible: false,\n    responseReceived: false,\n    enemyState: 'stand',\n    heroState: 'stand',\n    mistakeAlert: { display: 'none' },\n    enemyIsDead: false\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'PREPARE_STORE': {\n            const newStore = {\n                popUpIsVisible: false,\n                responseReceived: false,\n                enemyState: 'stand',\n                heroState: 'stand',\n                enemyHealth: HEALTH.initial,\n                userHealth: HEALTH.initial\n            };\n            return { ...state, ...newStore };\n        }\n        case 'START_GAME':\n        case 'END_GAME':\n        case 'GO_HOME':\n            return { ...state, currentPage: action.payload };\n        case 'SET_HEALTH':\n            return {\n                ...state,\n                ...{ enemyHealth: HEALTH.initial, userHealth: HEALTH.initial }\n            };\n        case 'SUBTRACT_HEALTH': {\n            if (action.payload) {\n                const health = state.enemyHealth - HEALTH.piece;\n                return { ...state, enemyHealth: health };\n            } else {\n                const health = state.userHealth - HEALTH.piece;\n                return { ...state, userHealth: health };\n            }\n        }\n        case 'ADD_USER_TO_SCORE':\n            state.score.push(action.payload);\n            return state;\n        case 'THROW_MISTAKE_ALERT': {\n            if (action.payload) {\n                return {\n                    ...state,\n                    mistakeAlert: { display: 'flex' }\n                };\n            } else {\n                return {\n                    ...state,\n                    mistakeAlert: { display: 'none' }\n                };\n            }\n        }\n        case 'RANDOM_ENEMY_NAME':\n            return { ...state, enemyName: action.payload };\n        case 'SWITCH_POP_UP': {\n            if (!state.popUpIsVisible) {\n                return {\n                    ...state,\n                    ...{\n                        popUpIsVisible: !state.popUpIsVisible,\n                        currentTaskWindow: 'skills'\n                    }\n                };\n            }\n            return { ...state, popUpIsVisible: !state.popUpIsVisible };\n        }\n        case 'SET_RANDOM_BACKGROUND':\n            return { ...state, rndBackGround: action.payload };\n        case 'GO_TO_TASKS_WINDOW':\n            return { ...state, currentTaskWindow: action.payload };\n        case 'TO_RIGHT_ANSWER_WINDOW':\n            return { ...state, currentTaskWindow: action.payload };\n        case 'TO_WRONG_ANSWER_WINDOW':\n            return { ...state, currentTaskWindow: action.payload };\n        case 'CREATE_NEW_LEVEL': {\n            const user = state.score.pop();\n            user.level = user.level + 1;\n            state.score.push(user);\n            return {\n                ...state,\n                ...{\n                    enemyName: action.payload[0],\n                    rndBackGround: action.payload[1],\n                    enemyHealth: HEALTH.initial\n                }\n            };\n        }\n        case 'CREATE_ENEMY':\n            return { ...state, enemy: action.payload };\n        case 'ENEMY_ACTION': {\n            if (action.payload === 'attack') {\n                return { ...state, enemyState: 'attack' };\n            } else if (action.payload === 'hurt') {\n                return { ...state, enemyState: 'hurt' };\n            } else if (action.payload === 'dying') {\n                return { ...state, enemyState: 'dying' };\n            }\n            return { ...state, enemyState: 'stand' };\n        }\n        case 'HERO_ACTION': {\n            if (action.payload === 'sword-attack') {\n                return { ...state, heroState: 'sword-attack' };\n            } else if (action.payload === 'throw-attack') {\n                return { ...state, heroState: 'throw-attack' };\n            } else if (action.payload === 'hurt') {\n                return { ...state, heroState: 'hurt' };\n            } else if (action.payload === 'dying') {\n                return { ...state, heroState: 'dying' };\n            }\n            return { ...state, heroState: 'stand' };\n        }\n        case 'ADD_AUDIO_EFFECT':\n            return { ...state, audioEffect: action.payload };\n        case 'SUBTRACT_AUDIO_EFFECT':\n            return { ...state, audioEffect: '' };\n        case 'TOGGLE_ATTACK_BUTTON': {\n            if (action.payload) {\n                return { ...state, attackButtonIndex: 1 };\n            } else {\n                return { ...state, attackButtonIndex: 0 };\n            }\n        }\n        case 'ENEMY_IS_DEAD':\n            return { ...state, enemyIsDead: action.payload };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { routGamePage } from './js/gameLogic';\n\nconst App = ({ currentPage }) => {\n    const Component = routGamePage(currentPage);\n    return (\n        <div className=\"app\">\n            <Component />\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({ currentPage: state.currentPage });\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reducer } from './js/store/reducer';\nimport App from './App';\n\nimport './styles/style.css';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\nmodule.hot.accept();\n","var map = {\n\t\"./body/body_1.svg\": [\n\t\t309,\n\t\t1\n\t],\n\t\"./body/body_2.svg\": [\n\t\t310,\n\t\t2\n\t],\n\t\"./body/body_3.svg\": [\n\t\t311,\n\t\t3\n\t],\n\t\"./handLeft/handLeft_1.svg\": [\n\t\t312,\n\t\t4\n\t],\n\t\"./handLeft/handLeft_2.svg\": [\n\t\t313,\n\t\t5\n\t],\n\t\"./handLeft/handLeft_3.svg\": [\n\t\t314,\n\t\t6\n\t],\n\t\"./handRight/handRight_1.svg\": [\n\t\t315,\n\t\t7\n\t],\n\t\"./handRight/handRight_2.svg\": [\n\t\t316,\n\t\t8\n\t],\n\t\"./handRight/handRight_3.svg\": [\n\t\t317,\n\t\t9\n\t],\n\t\"./head/head_1.svg\": [\n\t\t318,\n\t\t10\n\t],\n\t\"./head/head_2.svg\": [\n\t\t319,\n\t\t11\n\t],\n\t\"./head/head_3.svg\": [\n\t\t320,\n\t\t12\n\t],\n\t\"./legLeft/legLeft_1.svg\": [\n\t\t321,\n\t\t13\n\t],\n\t\"./legLeft/legLeft_2.svg\": [\n\t\t322,\n\t\t14\n\t],\n\t\"./legLeft/legLeft_3.svg\": [\n\t\t323,\n\t\t15\n\t],\n\t\"./legRight/legRight_1.svg\": [\n\t\t324,\n\t\t16\n\t],\n\t\"./legRight/legRight_2.svg\": [\n\t\t325,\n\t\t17\n\t],\n\t\"./legRight/legRight_3.svg\": [\n\t\t326,\n\t\t18\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 143;\nmodule.exports = webpackAsyncContext;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { prepareStore } from '../../store/actions';\nimport { UserNameInput } from '../../components';\n\nimport './HomePage.css';\n\nconst HomePage = ({ prepareStore, mistakeAlert }) => {\n    prepareStore();\n\n    return (\n        <section className=\"home-page\">\n            <h1>CONFRONTATION</h1>\n            <UserNameInput />\n            <div className=\"mistake-alert\" style={mistakeAlert}>\n                <div className=\"mistake-alert-wrapper\">\n                    <p>Entered invalid user data!!!</p>\n                    <p>Please enter new username.</p>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => ({\n    mistakeAlert: state.mistakeAlert\n});\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            prepareStore\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(HomePage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { goHome } from '../../store/actions';\nimport { Button } from '../../components';\n\nimport './EndPage.css';\n\nconst generateScoreItems = totalScore => {\n    return totalScore.map((user, index) => (\n        <li key={index}>\n            {user.name}\n            <span>{user.level}</span>\n        </li>\n    ));\n};\n\nconst EndPage = ({ score, goHome }) => {\n    return (\n        <section className=\"end-page\">\n            <h2>Total Score</h2>\n            <div className=\"score\">\n                <ul>{generateScoreItems(score)}</ul>\n            </div>\n            <Button\n                className=\"hendler-game-button new-game-button\"\n                content=\"NEW FIGHT\"\n                make–°hanges={goHome}\n            />\n        </section>\n    );\n};\n\nconst mapStateToProps = state => ({\n    score: state.score\n});\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            goHome\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EndPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n    setEnemyName,\n    setBackGround,\n    togglePopUp,\n    createNewLevel\n} from '../../store/actions';\nimport { chooseFitingBackground, gemerateRandomName } from '../../utils';\nimport { RoundInfo, Button, PopUpWindow, Enemy } from '../../components';\n\nimport './FightingPage.css';\nimport './HetoActions.css';\n\nclass FightingPage extends Component {\n    defineCurentPopUp = currentPopUp => {\n        if (currentPopUp) {\n            return <PopUpWindow />;\n        }\n        return null;\n    };\n\n    componentWillMount() {\n        this.props.setEnemyName(gemerateRandomName());\n        this.props.setBackGround(\n            chooseFitingBackground(this.props.rndBackGround)\n        );\n    }\n\n    render() {\n        const popUp = this.defineCurentPopUp(this.props.popUpIsVisible);\n        const heroActionClassName = 'hero hero-' + this.props.heroState;\n\n        return (\n            <section className={this.props.rndBackGround || ''}>\n                <div className=\"info-wrapper\">\n                    <RoundInfo />\n                    <Button\n                        className=\"attack\"\n                        make–°hanges={this.props.togglePopUp}\n                    />\n                </div>\n                <div className=\"fighting-plase\">\n                    <div className={heroActionClassName} />\n                    <Enemy />\n                </div>\n                {popUp}\n                <audio\n                    id=\"attack-sound\"\n                    src={this.props.audioEffect}\n                    autoPlay=\"autoplay\"\n                />\n            </section>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    audioEffect: state.audioEffect,\n    popUpIsVisible: state.popUpIsVisible,\n    rndBackGround: state.rndBackGround,\n    enemyHealth: state.enemyHealth,\n    heroState: state.heroState\n});\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            setEnemyName,\n            setBackGround,\n            togglePopUp,\n            createNewLevel\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FightingPage);\n","import { HomePage, EndPage, FightingPage } from '../pages';\nimport {\n    getRandomNumber,\n    sleep,\n    TIME_DELAY,\n    OPTIONS,\n    ENEMY_PARTS_NAME,\n    ALL_TASKS\n} from '../utils';\n\nconst getTaskComponent = () => ALL_TASKS[getRandomNumber(0, ALL_TASKS.length)];\n\nconst routGamePage = namePage => {\n    switch (namePage) {\n        case 'homePage':\n            return HomePage;\n        case 'fightingPage':\n            return FightingPage;\n        case 'scorePage':\n            return EndPage;\n        default:\n            return null;\n    }\n};\n\nconst getUserInfo = score => {\n    const user = score[score.length - 1];\n    return user;\n};\n\nconst getEnemyParts = async () => {\n    const loadImage = async (name, number) => {\n        return await import(`../../images/enemy/${name}/${name}_${number}.svg`);\n    };\n\n    const loadImagesGroup = async (name, count) => {\n        let group = [];\n        for (let i = 1; i <= count; i++) {\n            group.push(await loadImage(name, i));\n        }\n        return group;\n    };\n\n    const enemy = {};\n    for (let i = 0; i < ENEMY_PARTS_NAME.length; i++) {\n        const part = await loadImagesGroup(\n            ENEMY_PARTS_NAME[i],\n            OPTIONS.countEnemyPart\n        );\n        enemy[ENEMY_PARTS_NAME[i]] = part;\n    }\n\n    return enemy;\n};\n\nconst getEnemy = parts => {\n    const enemy = {};\n    for (let key in parts) {\n        const part = parts[key];\n        enemy[key] = part[getRandomNumber(0, part.length)];\n    }\n    return enemy;\n};\n\nconst makeEnemy = async (enemy, createEnemy) => {\n    const currentEnemy = getEnemy(enemy.parts);\n    const enemyParts = { ...enemy, ...currentEnemy };\n    await sleep(TIME_DELAY.changeEnemy);\n    createEnemy(enemyParts);\n};\n\nexport {\n    routGamePage,\n    getUserInfo,\n    getEnemyParts,\n    getEnemy,\n    makeEnemy,\n    getTaskComponent\n};\n","export {\n    routGamePage,\n    getUserInfo,\n    getEnemyParts,\n    getEnemy,\n    makeEnemy,\n    getTaskComponent\n} from './gameLogic';\n","import { OPTIONS } from '../utils';\n\nexport const startGame = () => ({\n    type: 'START_GAME',\n    payload: 'fightingPage'\n});\n\nexport const endGame = () => ({ type: 'END_GAME', payload: 'scorePage' });\n\nexport const goHome = () => ({ type: 'GO_HOME', payload: 'homePage' });\n\nexport const prepareStore = () => ({ type: 'PREPARE_STORE' });\n\nexport const addUser = (name, level) => {\n    if (name.length > OPTIONS.maxNameLength) {\n        name = name.slice(0, OPTIONS.maxNameLength);\n    }\n\n    return { type: 'ADD_USER_TO_SCORE', payload: { name, level } };\n};\n\nexport const setEnemyName = randomName => ({\n    type: 'RANDOM_ENEMY_NAME',\n    payload: randomName\n});\n\nexport const togglePopUp = () => ({ type: 'SWITCH_POP_UP' });\n\nexport const setBackGround = background => ({\n    type: 'SET_RANDOM_BACKGROUND',\n    payload: background\n});\n\nexport const goToTasksWindow = () => ({\n    type: 'GO_TO_TASKS_WINDOW',\n    payload: 'task'\n});\n\nexport const rightAnswer = () => ({\n    type: 'TO_RIGHT_ANSWER_WINDOW',\n    payload: 'rightAnswer'\n});\n\nexport const wrongAnswer = () => ({\n    type: 'TO_WRONG_ANSWER_WINDOW',\n    payload: 'wrongAnswer'\n});\n\nexport const setHealth = () => ({\n    type: 'SET_HEALTH'\n});\n\nexport const subtractHealth = flag => ({\n    type: 'SUBTRACT_HEALTH',\n    payload: flag\n});\n\nexport const createNewLevel = (name, bg) => ({\n    type: 'CREATE_NEW_LEVEL',\n    payload: [name, bg]\n});\n\nexport const createEnemy = enemy => ({\n    type: 'CREATE_ENEMY',\n    payload: enemy\n});\n\nexport const enemyAction = action => ({\n    type: 'ENEMY_ACTION',\n    payload: action\n});\n\nexport const heroAction = action => ({\n    type: 'HERO_ACTION',\n    payload: action\n});\n\nexport const addAudioEffect = src => ({\n    type: 'ADD_AUDIO_EFFECT',\n    payload: src\n});\n\nexport const subtractAudioEffect = () => ({\n    type: 'SUBTRACT_AUDIO_EFFECT'\n});\n\nexport const toggleAttackButton = index => ({\n    type: 'TOGGLE_ATTACK_BUTTON',\n    payload: index\n});\n\nexport const throwMistakeAlert = isVisible => ({\n    type: 'THROW_MISTAKE_ALERT',\n    payload: isVisible\n});\n\nexport const killEnemy = bool => ({\n    type: 'ENEMY_IS_DEAD',\n    payload: bool\n});\n","import React from 'react';\n\nimport './Button.css';\n\nconst Button = ({ className = '', content = '', make–°hanges }) => (\n    <button className={className} onClick={make–°hanges}>\n        {content}\n    </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { startGame, addUser, throwMistakeAlert } from '../../store/actions';\nimport { Button } from '../Button';\nimport { isNameCorrect, sleep, TIME_DELAY, OPTIONS } from '../../utils';\n\nimport './UserNameInput.css';\n\nconst UserNameInput = ({ score, addUser, startGame, throwMistakeAlert }) => {\n    let currentUserName = '';\n\n    const addName = event => {\n        event.preventDefault();\n        currentUserName = event.target.value;\n    };\n\n    const throwAndcloseAlert = async () => {\n        throwMistakeAlert(true);\n        await sleep(TIME_DELAY.closeMistakeAlert);\n        throwMistakeAlert();\n    };\n\n    const toFight = event => {\n        event.preventDefault();\n        let name = currentUserName;\n        name = name.replace(/(^\\s+|\\s+$)/g, '');\n\n        if (isNameCorrect(name, score)) {\n            addUser(name, OPTIONS.initialLevel);\n            startGame();\n        } else {\n            throwAndcloseAlert();\n        }\n    };\n\n    return (\n        <article className=\"name-input\">\n            <span>-What is your name warrior?</span>\n            <span>-My name is:</span>\n            <form onSubmit={toFight}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    onChange={addName}\n                    autoFocus=\"autofocus\"\n                />\n            </form>\n            <Button\n                className=\"hendler-game-button\"\n                content=\"FIGHT\"\n                make–°hanges={toFight}\n            />\n        </article>\n    );\n};\n\nconst mapStateToProps = state => ({\n    score: state.score\n});\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            startGame,\n            addUser,\n            throwMistakeAlert\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserNameInput);\n","import React from 'react';\n\nimport './Health.css';\n\nconst Health = ({ className, health }) => (\n    <article className={'health ' + className}>\n        <div\n            className={'current-health' + className}\n            style={{ width: `${health}%` }}\n        />\n    </article>\n);\n\nexport default Health;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n    endGame,\n    addAudioEffect,\n    subtractAudioEffect,\n    createNewLevel,\n    enemyAction,\n    killEnemy\n} from '../../store/actions';\nimport { Health } from '../Health';\nimport { getUserInfo } from '../../gameLogic';\nimport {\n    gemerateRandomName,\n    chooseFitingBackground,\n    sleep,\n    HEALTH,\n    URLS,\n    TIME_DELAY\n} from '../../utils';\n\nimport './RoundInfo.css';\n\nconst RoundInfo = props => {\n    let { name, level } = getUserInfo(props.score);\n\n    const userDied = async () => {\n        await sleep(TIME_DELAY.enemyWins[0]);\n        props.addAudioEffect(URLS.enemyWins);\n        await sleep(TIME_DELAY.enemyWins[1]);\n        props.subtractAudioEffect();\n        props.endGame();\n    };\n\n    const enemyDied = async () => {\n        const name = gemerateRandomName();\n        const backGroung = chooseFitingBackground(props.background);\n        await sleep(TIME_DELAY.heroWins[0]);\n        props.addAudioEffect(URLS.heroWins);\n        props.killEnemy(true);\n        await sleep(TIME_DELAY.heroWins[1]);\n        props.createNewLevel(name, backGroung);\n        props.subtractAudioEffect();\n        await sleep(TIME_DELAY.heroWins[2]);\n        props.enemyAction('stand');\n    };\n\n    if (props.userHealth === HEALTH.zero) {\n        userDied();\n    } else if (props.enemyHealth === HEALTH.zero) {\n        enemyDied();\n    }\n\n    return (\n        <article className=\"game-info\">\n            <div className=\"user-characteristics\">\n                <h3>{name}</h3>\n                <Health className=\"user-health\" health={props.userHealth} />\n            </div>\n            <div className=\"round\">{'Round ' + (level + 1)}</div>\n            <div className=\"enemy-characteristics\">\n                <h3>{props.enemyName}</h3>\n                <Health className=\"enemy-health\" health={props.enemyHealth} />\n            </div>\n        </article>\n    );\n};\n\nconst mapStateToProps = state => ({\n    score: state.score,\n    enemyHealth: state.enemyHealth,\n    userHealth: state.userHealth,\n    enemyName: state.enemyName,\n    background: state.rndBackGround\n});\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            endGame,\n            addAudioEffect,\n            subtractAudioEffect,\n            createNewLevel,\n            enemyAction,\n            killEnemy\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RoundInfo);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n    togglePopUp,\n    enemyAction,\n    subtractHealth,\n    addAudioEffect,\n    subtractAudioEffect,\n    heroAction\n} from '../../store/actions';\nimport { Skills, Task } from '../../components';\nimport { sleep, HEALTH, TIME_DELAY, URLS } from '../../utils';\n\nimport './TaskWindow.css';\n\nconst TaskWindow = props => {\n    const swordHeroAttack = async () => {\n        await sleep(TIME_DELAY.swordHeroAttack[0]);\n        props.heroAction('sword-attack');\n        await sleep(TIME_DELAY.swordHeroAttack[1]);\n        props.addAudioEffect(URLS.heroAttack);\n        await sleep(TIME_DELAY.swordHeroAttack[2]);\n        if (props.enemyHealth <= HEALTH.piece) {\n            props.enemyAction('dying');\n            await sleep(TIME_DELAY.swordHeroAttack[3]);\n            props.subtractHealth(true);\n            await sleep(TIME_DELAY.swordHeroAttack[4]);\n        } else {\n            props.enemyAction('hurt');\n            await sleep(TIME_DELAY.swordHeroAttack[3]);\n            props.subtractHealth(true);\n            await sleep(TIME_DELAY.swordHeroAttack[3]);\n            props.enemyAction('stand');\n            await sleep(TIME_DELAY.swordHeroAttack[3]);\n        }\n        props.heroAction('stand');\n        props.subtractAudioEffect();\n    };\n\n    const throwHeroAttack = async () => {\n        await sleep(TIME_DELAY.throwHeroAttack[0]);\n        props.heroAction('throw-attack');\n        await sleep(TIME_DELAY.throwHeroAttack[1]);\n        props.addAudioEffect(URLS.heroAttack);\n        await sleep(TIME_DELAY.throwHeroAttack[2]);\n        if (props.enemyHealth <= HEALTH.piece) {\n            props.heroAction('stand');\n            props.enemyAction('dying');\n            await sleep(TIME_DELAY.throwHeroAttack[3]);\n            props.subtractHealth(true);\n        } else {\n            props.enemyAction('hurt');\n            props.heroAction('stand');\n            await sleep(TIME_DELAY.throwHeroAttack[3]);\n            props.subtractHealth(true);\n            await sleep(TIME_DELAY.throwHeroAttack[3]);\n            props.enemyAction('stand');\n        }\n        await sleep(TIME_DELAY.throwHeroAttack[4]);\n        props.subtractAudioEffect();\n    };\n\n    const enemyAttackHero = async () => {\n        await sleep(TIME_DELAY.enemyAttack[0]);\n        props.enemyAction('attack');\n        await sleep(TIME_DELAY.enemyAttack[0]);\n        props.addAudioEffect(URLS.enemyAttack);\n        if (props.userHealth <= HEALTH.piece) {\n            await sleep(TIME_DELAY.enemyAttack[1]);\n            props.subtractHealth(false);\n            await sleep(TIME_DELAY.enemyAttack[2]);\n            props.heroAction('dying');\n        } else {\n            await sleep(TIME_DELAY.enemyAttack[2]);\n            props.heroAction('hurt');\n            await sleep(TIME_DELAY.enemyAttack[3]);\n            props.subtractHealth(false);\n            props.heroAction('stand');\n        }\n        await sleep(TIME_DELAY.enemyAttack[4]);\n        props.enemyAction('stand');\n        props.subtractAudioEffect();\n    };\n\n    const attackToEnemy = async () => {\n        await sleep(TIME_DELAY.beforeAttack);\n        props.togglePopUp();\n\n        if (!props.attackIndex) {\n            swordHeroAttack();\n        } else {\n            throwHeroAttack();\n        }\n    };\n\n    const attackToHero = async () => {\n        await sleep(TIME_DELAY.beforeAttack);\n        props.togglePopUp();\n        enemyAttackHero();\n    };\n\n    const defineTaskWindow = () => {\n        switch (props.currentWindow) {\n            case 'skills':\n                return <Skills />;\n            case 'task':\n                return <Task />;\n            case 'rightAnswer':\n                attackToEnemy();\n                return <p className=\"result\">You are right!</p>;\n            case 'wrongAnswer':\n                attackToHero();\n                return <p className=\"result\">You are mistaken!</p>;\n            default:\n                return null;\n        }\n    };\n\n    return <div className=\"task-window\">{defineTaskWindow()}</div>;\n};\n\nconst mapStateToProps = state => ({\n    currentWindow: state.currentTaskWindow,\n    attackIndex: state.attackButtonIndex,\n    enemyHealth: state.enemyHealth,\n    userHealth: state.userHealth\n});\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            togglePopUp,\n            enemyAction,\n            subtractHealth,\n            addAudioEffect,\n            subtractAudioEffect,\n            heroAction\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TaskWindow);\n","import React from 'react';\nimport { TaskWindow } from '../../components';\n\nimport './PopUpWindow.css';\n\nconst PopUpWindow = () => (\n    <div className=\"pop-up\">\n        <TaskWindow />\n    </div>\n);\n\nexport default PopUpWindow;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { wrongAnswer, rightAnswer } from '../../store/actions';\nimport { getTaskComponent } from '../../gameLogic';\n\nimport './Task.css';\n\nconst Tasks = ({ wrongAnswer, rightAnswer }) => {\n    const getResult = result => {\n        if (result) {\n            rightAnswer();\n        } else {\n            wrongAnswer();\n        }\n    };\n\n    const TaskComponent = getTaskComponent();\n\n    return (\n        <div className=\"tasks\">\n            <TaskComponent getResult={getResult} />\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            wrongAnswer,\n            rightAnswer\n        },\n        dispatch\n    );\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Tasks);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { goToTasksWindow, toggleAttackButton } from '../../store/actions';\nimport { Button } from '../../components';\n\nimport './Skills.css';\n\nconst Skills = ({ goToTasksWindow, toggleAttackButton }) => {\n    const startTestForSwordAttack = () => {\n        goToTasksWindow();\n        toggleAttackButton(false);\n    };\n\n    const startTestForThrowAttack = () => {\n        goToTasksWindow();\n        toggleAttackButton(true);\n    };\n\n    return (\n        <div className=\"skills\">\n            <Button\n                content=\"Swart Attack\"\n                className=\"hendler-game-button skills-button\"\n                make–°hanges={startTestForSwordAttack}\n            />\n            <Button\n                content=\"Throw Attack\"\n                className=\"hendler-game-button skills-button\"\n                make–°hanges={startTestForThrowAttack}\n            />\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            goToTasksWindow,\n            toggleAttackButton\n        },\n        dispatch\n    );\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Skills);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { createEnemy, killEnemy } from '../../store/actions';\nimport { EnemyPart } from '../../components';\nimport { getEnemyParts, getEnemy, makeEnemy } from '../../gameLogic';\n\nimport './Enemy.css';\n\nclass Enemy extends Component {\n    componentWillReceiveProps(nextProps) {\n        const enemy = nextProps.enemy;\n        if (nextProps.enemyIsDead) {\n            this.props.killEnemy(false);\n            makeEnemy(enemy, this.props.createEnemy, this.props.killEnemy);\n        }\n    }\n\n    componentWillMount() {\n        getEnemyParts().then(parts => {\n            const currentEnemy = getEnemy(parts);\n            currentEnemy.parts = parts;\n            this.props.createEnemy(currentEnemy);\n        });\n    }\n\n    render() {\n        if (!this.props.enemy) {\n            return null;\n        }\n\n        const enemyState = this.props.enemyState;\n        let {\n            head,\n            body,\n            handLeft,\n            handRight,\n            legLeft,\n            legRight\n        } = this.props.enemy;\n\n        return (\n            <div className=\"enemy\">\n                <EnemyPart name={'head-enemy-' + enemyState} partUrl={head} />\n                <EnemyPart name={'body-enemy-' + enemyState} partUrl={body} />\n                <EnemyPart\n                    name={'hand-left-enemy-' + enemyState}\n                    partUrl={handLeft}\n                />\n                <EnemyPart\n                    name={'hand-right-enemy-' + enemyState}\n                    partUrl={handRight}\n                />\n                <EnemyPart\n                    name={'leg-left-enemy-' + enemyState}\n                    partUrl={legLeft}\n                />\n                <EnemyPart\n                    name={'leg-right-enemy-' + enemyState}\n                    partUrl={legRight}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    enemyHealth: state.enemyHealth,\n    enemy: state.enemy,\n    enemyState: state.enemyState,\n    enemyIsDead: state.enemyIsDead\n});\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            createEnemy,\n            killEnemy\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Enemy);\n","import React from 'react';\n\nimport './EnemyPart.css';\n\nconst EnemyPart = ({ name, partUrl = '' }) => {\n    return (\n        <i\n            className={`part ${name}`}\n            style={{\n                background: `url(${partUrl.default}) no-repeat center center`\n            }}\n        />\n    );\n};\n\nexport default EnemyPart;\n","export { UserNameInput } from './UserNameInput';\nexport { Button } from './Button';\nexport { Health } from './Health';\nexport { RoundInfo } from './RoundInfo';\nexport { TaskWindow } from './TaskWindow';\nexport { PopUpWindow } from './PopUpWindow';\nexport { Task } from './Task';\nexport { Skills } from './Skills';\nexport { Spinner } from './Spinner';\nexport { Enemy } from './Enemy';\nexport { EnemyPart } from './EnemyPart';\n"],"sourceRoot":""}